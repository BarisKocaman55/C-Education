<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4w0LfjsdmnrP8Khvm+xnegCnAAAAAAAAH//Z
</value>
  </data>
</root>